#!/bin/bash

### Define Resources ###########################################################
################################################################################
#SBATCH --job-name=Indexing
#SBATCH --time=00:05:00 --nodes=1 --ntasks=1 --cpus-per-task=1 --mem=200M
#SBATCH --mail-type=BEGIN,FAIL,END

### Option Variables ###########################################################
################################################################################
[[ -z $SEQUENCE_PREFIX ]] && SEQUENCE_PREFIX=sequences
################################################################################

is-slurm-job() {
  [[ -n $SLURM_JOB_ID ]]
}

### Repeat $1 times the string $2
repeat() {
  printf '%*.0s' "$1" | sed -e "s| |$2|g"
}

fs-avail() {
  df -P "$1" | sed -e 1d | awk -e '{ print $4 }'
}

disk-usage() {
  du -ks "$1" | awk -e '{ print $1 }'
}

echo "### Job Info $(repeat $((80-13)) '#')"
repeat 80 '#'; echo
echo "Starting job $SLURM_JOB_ID($SLURM_JOB_NAME)"
printf "Command Line: %s\n" "$0 $*"
echo
echo Environment:
env
repeat 80 '#'; echo

### Modules ####################################################################
################################################################################
module purge

# GNU
module load GNU/6.4.0-2.28 OpenMPI/2.1.1

# Intel C
#module load icc/2017.4.196-GCC-6.4.0-2.28 impi/2017.3.196
# Intel Fortran
#module load ifort/2017.4.196-GCC-6.4.0-2.28 impi/2017.3.196

module load BWA/0.7.17
################################################################################

refgnm="Caenorhabditis_elegans.WBcel235.dna.toplevel.fa.gz"
scratch_prefix="/mnt/scratch/$USER/slurm-${SLURM_JOB_ID:-test}"
mkdir -p "$scratch_prefix/output"
cp "$SEQUENCE_PREFIX/$refgnm" "$scratch_prefix/$refgnm"

index_cmd=(bwa index -a bwtsw "$scratch_prefix/$refgnm")

echo Running indexing job...
if is-slurm-job; then
  time srun -N 1 "${index_cmd[@]}"
else
  "${index_cmd[@]}" &

  echo Waiting for process to terminate...
  while kill %%; do
    sleep 1
  done
fi

if (( $(disk-usage "$scratch_prefix") >= $(fs-avail "$SEQUENCE_PREFIX") )); then
  echo "Not enough space in $SEQUENCE_PREFIX for output."
  echo "$scratch_prefix preserved"
## I tried having a separate output diectory using the -p switch to bwa, but for somereason
## there just isn't output when I do that. So instead we do it the hacky way, where we let it
## output into the same directory as the input file but use *? to match everything like * but
## excluding the case where * is nothing.
elif ! cp -R "$scratch_prefix/$refgnm"*? "$SEQUENCE_PREFIX/"; then
  echo "Failed to copy output to $SEQUENCE_PREFIX"
  echo "$scratch_prefix preserved"
else
  rm -rf "$scratch_prefix"
fi

echo
echo "### Job Info $(repeat $((80-13)) '#')"
repeat 80 '#'; echo
is-slurm-job && scontrol show job $SLURM_JOB_ID
